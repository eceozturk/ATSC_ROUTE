# This is the CMakeCache file.
# For build in directory: /var/www/html/android/ATSC_ROUTE/Work/Route_Receiver/libwebsockets-master/build
# It was generated by CMake: /usr/bin/cmake
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Path to a program.
CMAKE_AR:FILEPATH=/opt/android-toolchain/arm-linux-androideabi/bin/ar

//Build type
CMAKE_BUILD_TYPE:STRING=Release

//Enable/Disable color output during build.
CMAKE_COLOR_MAKEFILE:BOOL=ON

//No help, variable specified on the command line.
CMAKE_C_FLAGS:STRING=--sysroot=/opt/android-toolchain/sysroot

//Flags used by the compiler during debug builds.
CMAKE_C_FLAGS_DEBUG:STRING=-g

//Flags used by the compiler during release builds for minimum
// size.
CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the compiler during release builds.
CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the compiler during release builds with debug info.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//Flags used by the linker.
CMAKE_EXE_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Enable/Disable output of compile commands during generation.
CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=OFF

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=/usr/local

//Path to a program.
CMAKE_LINKER:FILEPATH=/opt/android-toolchain/arm-linux-androideabi/bin/ld

//Path to a program.
CMAKE_MAKE_PROGRAM:FILEPATH=/usr/bin/make

//Flags used by the linker during the creation of modules.
CMAKE_MODULE_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_NM:FILEPATH=/opt/android-toolchain/arm-linux-androideabi/bin/nm

//Path to a program.
CMAKE_OBJCOPY:FILEPATH=/opt/android-toolchain/arm-linux-androideabi/bin/objcopy

//Path to a program.
CMAKE_OBJDUMP:FILEPATH=/opt/android-toolchain/arm-linux-androideabi/bin/objdump

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=libwebsockets

//Path to a program.
CMAKE_RANLIB:FILEPATH=/opt/android-toolchain/arm-linux-androideabi/bin/ranlib

//Flags used by the linker during the creation of dll's.
CMAKE_SHARED_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries.
CMAKE_STATIC_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_STRIP:FILEPATH=/opt/android-toolchain/arm-linux-androideabi/bin/strip

//The CMake toolchain file
CMAKE_TOOLCHAIN_FILE:FILEPATH=/var/www/html/android/ATSC_ROUTE/Work/Route_Receiver/libwebsockets-master/cross-android.cmake

//If true, cmake will use relative paths in makefiles and projects.
CMAKE_USE_RELATIVE_PATHS:BOOL=OFF

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Enable to build Debian packages
CPACK_BINARY_DEB:BOOL=OFF

//Enable to build IFW packages
CPACK_BINARY_IFW:BOOL=OFF

//Enable to build NSIS packages
CPACK_BINARY_NSIS:BOOL=OFF

//Enable to build RPM packages
CPACK_BINARY_RPM:BOOL=OFF

//Enable to build STGZ packages
CPACK_BINARY_STGZ:BOOL=ON

//Enable to build TBZ2 packages
CPACK_BINARY_TBZ2:BOOL=OFF

//Enable to build TGZ packages
CPACK_BINARY_TGZ:BOOL=ON

//Enable to build TXZ packages
CPACK_BINARY_TXZ:BOOL=OFF

//Enable to build TZ packages
CPACK_BINARY_TZ:BOOL=ON

//git command line client
GIT_EXECUTABLE:FILEPATH=/usr/bin/git

//Libwebsockets include directories
LIBWEBSOCKETS_INCLUDE_DIRS:PATH=/var/www/html/android/ATSC_ROUTE/Work/Route_Receiver/libwebsockets-master/lib;/var/www/html/android/ATSC_ROUTE/Work/Route_Receiver/libwebsockets-master/build

//Libwebsocket libraries
LIBWEBSOCKETS_LIBRARIES:STRING=websockets;websockets_shared

//Libwebsocket shared library
LIBWEBSOCKETS_LIBRARIES_SHARED:STRING=websockets_shared

//Libwebsocket static library
LIBWEBSOCKETS_LIBRARIES_STATIC:STRING=websocket

//Path to the CyaSSL include directory
LWS_CYASSL_INCLUDE_DIRS:PATH=

//Path to the CyaSSL library
LWS_CYASSL_LIBRARIES:PATH=

//Installation directory for executables
LWS_INSTALL_BIN_DIR:PATH=bin

//Installation directory for CMake files
LWS_INSTALL_CMAKE_DIR:PATH=lib/cmake/libwebsockets

//Installation directory for example files
LWS_INSTALL_EXAMPLES_DIR:PATH=bin

//Installation directory for header files
LWS_INSTALL_INCLUDE_DIR:PATH=include

//Installation directory for libraries
LWS_INSTALL_LIB_DIR:PATH=lib

//Compile with support for ipv6
LWS_IPV6:BOOL=OFF

//Path to the libev include directory
LWS_LIBEV_INCLUDE_DIRS:PATH=

//Path to the libev library
LWS_LIBEV_LIBRARIES:PATH=

//Link the test apps to the shared version of the library. Default
// is to link statically
LWS_LINK_TESTAPPS_DYNAMIC:BOOL=OFF

//Server SSL certificate directory
LWS_OPENSSL_CLIENT_CERTS:PATH=../share

//Path to the OpenSSL include directory
LWS_OPENSSL_INCLUDE_DIRS:PATH=

//Path to the OpenSSL library
LWS_OPENSSL_LIBRARIES:PATH=

//SSL support should make use of OS installed CA root certs
LWS_SSL_CLIENT_USE_OS_CA_CERTS:BOOL=ON

//Use bundled zlib version (Windows only)
LWS_USE_BUNDLED_ZLIB:BOOL=OFF

//Use CyaSSL replacement for OpenSSL. When settings this, you also
// need to specify LWS_CYASSL_LIBRARIES and LWS_CYASSL_INCLUDE_DIRS
LWS_USE_CYASSL:BOOL=OFF

//Don't use BSD getifaddrs implementation from libwebsockets if
// it is missing (this will result in a compilation error) ...
// Default is your libc provides it. On some systems such as uclibc
// it doesn't exist.
LWS_WITHOUT_BUILTIN_GETIFADDRS:BOOL=OFF

//Don't build the client part of the library
LWS_WITHOUT_CLIENT:BOOL=OFF

//Don't build the daemonization api
LWS_WITHOUT_DAEMONIZE:BOOL=ON

//Don't compile with extensions
LWS_WITHOUT_EXTENSIONS:BOOL=OFF

//Don't build the server part of the library
LWS_WITHOUT_SERVER:BOOL=OFF

//Don't build the libwebsocket-test-apps
LWS_WITHOUT_TESTAPPS:BOOL=OFF

//Don't build the client test application
LWS_WITHOUT_TEST_CLIENT:BOOL=OFF

//Don't build the ping test application
LWS_WITHOUT_TEST_FRAGGLE:BOOL=OFF

//Don't build the ping test application
LWS_WITHOUT_TEST_PING:BOOL=OFF

//Don't build the test server
LWS_WITHOUT_TEST_SERVER:BOOL=OFF

//Don't build the test server version that uses external poll
LWS_WITHOUT_TEST_SERVER_EXTPOLL:BOOL=OFF

//Compile with support for http2
LWS_WITH_HTTP2:BOOL=OFF

//Build latency measuring code into the library
LWS_WITH_LATENCY:BOOL=OFF

//Compile with support for libev
LWS_WITH_LIBEV:BOOL=OFF

//Build the shared version of the library
LWS_WITH_SHARED:BOOL=ON

//Include SSL support (default OpenSSL, CyaSSL if LWS_USE_CYASSL
// is set)
LWS_WITH_SSL:BOOL=ON

//Build the static version of the library
LWS_WITH_STATIC:BOOL=ON

//Include zlib support (required for extensions)
LWS_WITH_ZLIB:BOOL=ON

//Path to the zlib include directory
LWS_ZLIB_INCLUDE_DIRS:PATH=

//Path to the zlib library
LWS_ZLIB_LIBRARIES:PATH=

//No help, variable specified on the command line.
OPENSSL_CRYPTO_LIBRARY:FILEPATH=/opt/android-toolchain/sysroot/usr/lib/libcrypto.so

//No help, variable specified on the command line.
OPENSSL_EXECUTABLE:FILEPATH=/opt/android-toolchain/sysroot/usr/bin/openssl

//No help, variable specified on the command line.
OPENSSL_INCLUDE_DIR:PATH=/opt/android-toolchain/sysroot/usr/include

//No help, variable specified on the command line.
OPENSSL_SSL_LIBRARY:FILEPATH=/opt/android-toolchain/sysroot/usr/lib/libssl.so

//pkg-config executable
PKG_CONFIG_EXECUTABLE:FILEPATH=/usr/bin/pkg-config

//The RPM builder tool
RPMTools_RPMBUILD_EXECUTABLE:FILEPATH=/usr/bin/rpmbuild

//No help, variable specified on the command line.
ZLIB_INCLUDE_DIR:PATH=/opt/android-toolchain/sysroot/usr/include

//No help, variable specified on the command line.
ZLIB_LIBRARY:FILEPATH=/opt/android-toolchain/sysroot/usr/lib/libz.so

//Value Computed by CMake
libwebsockets_BINARY_DIR:STATIC=/var/www/html/android/ATSC_ROUTE/Work/Route_Receiver/libwebsockets-master/build

//Value Computed by CMake
libwebsockets_SOURCE_DIR:STATIC=/var/www/html/android/ATSC_ROUTE/Work/Route_Receiver/libwebsockets-master

//Dependencies for the target
websockets_LIB_DEPENDS:STATIC=general;/opt/android-toolchain/sysroot/usr/lib/libz.so;general;/opt/android-toolchain/sysroot/usr/lib/libssl.so;general;/opt/android-toolchain/sysroot/usr/lib/libcrypto.so;general;m;

//Dependencies for the target
websockets_shared_LIB_DEPENDS:STATIC=general;/opt/android-toolchain/sysroot/usr/lib/libz.so;general;/opt/android-toolchain/sysroot/usr/lib/libssl.so;general;/opt/android-toolchain/sysroot/usr/lib/libcrypto.so;general;m;


########################
# INTERNAL cache entries
########################

//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=/var/www/html/android/ATSC_ROUTE/Work/Route_Receiver/libwebsockets-master/build
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=3
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=0
//ADVANCED property for variable: CMAKE_COLOR_MAKEFILE
CMAKE_COLOR_MAKEFILE-ADVANCED:INTERNAL=1
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=/usr/bin/cmake
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=/usr/bin/cpack
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=/usr/bin/ctest
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Path to cache edit program executable.
CMAKE_EDIT_COMMAND:INTERNAL=/usr/bin/ccmake
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=ELF
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXPORT_COMPILE_COMMANDS
CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Unix Makefiles
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=/var/www/html/android/ATSC_ROUTE/Work/Route_Receiver/libwebsockets-master
//Install .so files without execute permission.
CMAKE_INSTALL_SO_NO_EXE:INTERNAL=1
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MAKE_PROGRAM
CMAKE_MAKE_PROGRAM-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_NM
CMAKE_NM-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_LOCAL_GENERATORS:INTERNAL=1
//ADVANCED property for variable: CMAKE_OBJCOPY
CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_OBJDUMP
CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RANLIB
CMAKE_RANLIB-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=/usr/share/cmake-3.3
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STRIP
CMAKE_STRIP-ADVANCED:INTERNAL=1
//uname command
CMAKE_UNAME:INTERNAL=/bin/uname
//ADVANCED property for variable: CMAKE_USE_RELATIVE_PATHS
CMAKE_USE_RELATIVE_PATHS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_DEB
CPACK_BINARY_DEB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_IFW
CPACK_BINARY_IFW-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_NSIS
CPACK_BINARY_NSIS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_RPM
CPACK_BINARY_RPM-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_STGZ
CPACK_BINARY_STGZ-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_TBZ2
CPACK_BINARY_TBZ2-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_TGZ
CPACK_BINARY_TGZ-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_TXZ
CPACK_BINARY_TXZ-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_TZ
CPACK_BINARY_TZ-ADVANCED:INTERNAL=1
//Details about finding Git
FIND_PACKAGE_MESSAGE_DETAILS_Git:INTERNAL=[/usr/bin/git][v()]
//Details about finding OpenSSL
FIND_PACKAGE_MESSAGE_DETAILS_OpenSSL:INTERNAL=[/opt/android-toolchain/sysroot/usr/lib/libssl.so;/opt/android-toolchain/sysroot/usr/lib/libcrypto.so][/opt/android-toolchain/sysroot/usr/include][v1.0.2c()]
//Details about finding ZLIB
FIND_PACKAGE_MESSAGE_DETAILS_ZLIB:INTERNAL=[/opt/android-toolchain/sysroot/usr/lib/libz.so][/opt/android-toolchain/sysroot/usr/include][v1.2.8()]
//ADVANCED property for variable: GIT_EXECUTABLE
GIT_EXECUTABLE-ADVANCED:INTERNAL=1
//Have function bzero
HAVE_BZERO:INTERNAL=1
//Have include dlfcn.h
HAVE_DLFCN_H:INTERNAL=1
//Have include fcntl.h
HAVE_FCNTL_H:INTERNAL=1
//Have function fork
HAVE_FORK:INTERNAL=1
//Have function getenv
HAVE_GETENV:INTERNAL=1
//Have function getifaddrs
HAVE_GETIFADDRS:INTERNAL=
//Have include in6addr.h
HAVE_IN6ADDR_H:INTERNAL=
//Have include inttypes.h
HAVE_INTTYPES_H:INTERNAL=1
//Have function malloc
HAVE_MALLOC:INTERNAL=1
//Have include memory.h
HAVE_MEMORY_H:INTERNAL=1
//Have function memset
HAVE_MEMSET:INTERNAL=1
//Have include netinet/in.h
HAVE_NETINET_IN_H:INTERNAL=1
//Result of TRY_COMPILE
HAVE_PID_T_SIZE:INTERNAL=TRUE
//Have function realloc
HAVE_REALLOC:INTERNAL=1
//Result of TRY_COMPILE
HAVE_SIZE_T_SIZE:INTERNAL=TRUE
//Have function socket
HAVE_SOCKET:INTERNAL=1
//Have include stddef.h
HAVE_STDDEF_H:INTERNAL=1
//Have include stdint.h
HAVE_STDINT_H:INTERNAL=1
//Have include stdlib.h
HAVE_STDLIB_H:INTERNAL=1
//Have function strerror
HAVE_STRERROR:INTERNAL=1
//Have include strings.h
HAVE_STRINGS_H:INTERNAL=1
//Have include string.h
HAVE_STRING_H:INTERNAL=1
//Have include sys/prctl.h
HAVE_SYS_PRCTL_H:INTERNAL=1
//Have include sys/socket.h
HAVE_SYS_SOCKET_H:INTERNAL=1
//Have include sys/stat.h
HAVE_SYS_STAT_H:INTERNAL=1
//Have include sys/types.h
HAVE_SYS_TYPES_H:INTERNAL=1
//Have include unistd.h
HAVE_UNISTD_H:INTERNAL=1
//Have function vfork
HAVE_VFORK:INTERNAL=1
//Have include vfork.h
HAVE_VFORK_H:INTERNAL=
//Test HAVE_VISIBILITY
HAVE_VISIBILITY:INTERNAL=1
//Have include zlib.h
HAVE_ZLIB_H:INTERNAL=1
//Test HAVE___inline
HAVE___inline:INTERNAL=1
//Test HAVE___inline__
HAVE___inline__:INTERNAL=1
//Test HAVE_inline
HAVE_inline:INTERNAL=1
//ADVANCED property for variable: OPENSSL_CRYPTO_LIBRARY
OPENSSL_CRYPTO_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: OPENSSL_EXECUTABLE
OPENSSL_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: OPENSSL_INCLUDE_DIR
OPENSSL_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: OPENSSL_SSL_LIBRARY
OPENSSL_SSL_LIBRARY-ADVANCED:INTERNAL=1
//CHECK_TYPE_SIZE: sizeof(pid_t)
PID_T_SIZE:INTERNAL=4
//ADVANCED property for variable: PKG_CONFIG_EXECUTABLE
PKG_CONFIG_EXECUTABLE-ADVANCED:INTERNAL=1
//CHECK_TYPE_SIZE: sizeof(size_t)
SIZE_T_SIZE:INTERNAL=4
//Have include stdlib.h;stdarg.h;string.h;float.h
STDC_HEADERS:INTERNAL=1
//ADVANCED property for variable: ZLIB_INCLUDE_DIR
ZLIB_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: ZLIB_LIBRARY
ZLIB_LIBRARY-ADVANCED:INTERNAL=1
_OPENSSL_CFLAGS:INTERNAL=
_OPENSSL_CFLAGS_I:INTERNAL=
_OPENSSL_CFLAGS_OTHER:INTERNAL=
_OPENSSL_FOUND:INTERNAL=1
_OPENSSL_INCLUDEDIR:INTERNAL=/usr/include
_OPENSSL_INCLUDE_DIRS:INTERNAL=
_OPENSSL_LDFLAGS:INTERNAL=-lssl;-lcrypto
_OPENSSL_LDFLAGS_OTHER:INTERNAL=
_OPENSSL_LIBDIR:INTERNAL=/usr/lib/x86_64-linux-gnu
_OPENSSL_LIBRARIES:INTERNAL=ssl;crypto
_OPENSSL_LIBRARY_DIRS:INTERNAL=
_OPENSSL_LIBS:INTERNAL=
_OPENSSL_LIBS_L:INTERNAL=
_OPENSSL_LIBS_OTHER:INTERNAL=
_OPENSSL_LIBS_PATHS:INTERNAL=
_OPENSSL_PREFIX:INTERNAL=/usr
_OPENSSL_STATIC_CFLAGS:INTERNAL=
_OPENSSL_STATIC_CFLAGS_I:INTERNAL=
_OPENSSL_STATIC_CFLAGS_OTHER:INTERNAL=
_OPENSSL_STATIC_INCLUDE_DIRS:INTERNAL=
_OPENSSL_STATIC_LDFLAGS:INTERNAL=-lssl;-lcrypto;-ldl;-lz
_OPENSSL_STATIC_LDFLAGS_OTHER:INTERNAL=
_OPENSSL_STATIC_LIBDIR:INTERNAL=
_OPENSSL_STATIC_LIBRARIES:INTERNAL=ssl;crypto;dl;z
_OPENSSL_STATIC_LIBRARY_DIRS:INTERNAL=
_OPENSSL_STATIC_LIBS:INTERNAL=
_OPENSSL_STATIC_LIBS_L:INTERNAL=
_OPENSSL_STATIC_LIBS_OTHER:INTERNAL=
_OPENSSL_STATIC_LIBS_PATHS:INTERNAL=
_OPENSSL_VERSION:INTERNAL=1.0.1
_OPENSSL_openssl_INCLUDEDIR:INTERNAL=
_OPENSSL_openssl_LIBDIR:INTERNAL=
_OPENSSL_openssl_PREFIX:INTERNAL=
_OPENSSL_openssl_VERSION:INTERNAL=
__pkg_config_checked__OPENSSL:INTERNAL=1

